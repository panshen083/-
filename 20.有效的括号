class Solution {
public:
    bool isValid(string s) {
        stack <char> st;
        for(int i=0;i<s.size();i++){
            if(s[i] == '(' || s[i] == '[' || s[i] == '{')
            st.push(s[i]);
            else if(s[i] == ')'){
                if (!st.empty() && st.top() == '(')
                st.pop();
                else return false;
            }
            else if(s[i] == ']'){
                if (!st.empty() && st.top() == '[')
                st.pop();
                else return false;
            }
            else if(s[i] == '}'){
                if (!st.empty() && st.top() == '{')
                st.pop();
                else return false;
            }
        }
        if(st.empty())  return true;
        else return false;
    }
};

通过调用栈的知识进行符号匹配（低端版本）
学习两个栈进行四则运算并能够独立写出一个运算式子
